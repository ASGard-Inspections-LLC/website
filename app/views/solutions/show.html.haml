#solution-page
  #nav.lo-nav-bar
    .lo-container
      -if user_signed_in?
        =link_to "Dashboard", root_path
        =image_tag "nav-divider.png"
        =link_to "Language Tracks", [:my, :tracks]
        =image_tag "nav-divider.png"
        =link_to "#{@track.title} Track", [:my, @track]
        =image_tag "nav-divider.png"
        -if @user_solution
          =link_to "Your Solution to #{@exercise.title}", [:my, @user_solution]
          =image_tag "nav-divider.png"
        =link_to "Community Solutions", [@track, @exercise, :solutions]
        =image_tag "nav-divider.png"
        %span This Solution

      -else
        =link_to "Language Tracks", :tracks
        =image_tag "nav-divider.png"
        =link_to "#{@track.title} Track", @track
        =image_tag "nav-divider.png"
        =link_to "Exercises", [@track, :exercises]
        =image_tag "nav-divider.png"
        =link_to @exercise.title, [@track, @exercise]
        =image_tag "nav-divider.png"
        =link_to "Community Solutions", [@track, @exercise, :solutions]
        =image_tag "nav-divider.png"
        %span This Solution

  .lo-container
    .header
      =image_tag display_avatar_url(@solution.user, @solution.user.user_track_for(@track)), class: "avatar"

      .reactions
        .reaction
          %i.fa.fa-fw.fa-thumbs-up
          .count= @reaction_counts.fetch('applaud', 0)

        .reaction
          %i.fa.fa-fw.fa-heart
          .count= @reaction_counts.fetch('love', 0)

        .reaction
          =image_tag "genius-turquoise.png"
          .count= @reaction_counts.fetch('wowed', 0)

        .reaction
          %i.fa.fa-fw.fa-comment
          .count= @comments.size

      %h1 #{display_name(@solution.user, @solution.user.user_track_for(@track))}'s solution

      %h2
        to #{link_to @exercise.title, [@track, @exercise], class: "exercise"}
        in the #{link_to "#{@track.title} Track", class: "track"}

  .lo-container
    .pure-g.panels
      .pure-u-1-2.lhs
        .lhs-content
          .tabs-and-panes.selected-3
            .tabs
              .tab.tab-1
                Instructions
              .tab.tab-2
                Test Suite
              .tab.tab-3
                Solution

            .panes
              .pane.pane-1.instructions
                =raw @iteration.solution.instructions
              .pane.pane-2.test-suite
                -@iteration.solution.test_suite.each do |filename, code|
                  %h3= filename
                  %pre.line-numbers
                    %code{class: "language-ruby"}
                      = code
              .pane.pane-3.solution
                %pre.solution-code.line-numbers{data: {line: "3,6"}}
                  %code{class: "language-ruby"}
                    = @iteration.code

        -if user_signed_in?
          .react
            %h3 React to this solution
            =link_to "#" do
              .hover Well done
              %i.fa.fa-fw.fa-thumbs-up
            =link_to "#" do
              .hover Love it!
              %i.fa.fa-fw.fa-heart
            =link_to "#" do
              .hover Genius!
              =image_tag "genius.png"


      .pure-u-1-2.rhs
        -if @solution.reflection.present?
          .reflection
            %h3 #{display_name(@solution.user, @solution.user.user_track_for(@track))}'s Reflection
            =simple_format @solution.reflection
        -else
          .no-reflection
            %h3 What can you learn from this solution?
            %p A huge amount can be learnt from reading other peopleâ€™s code. This is why we wanted to give exercism users the option of making their solutions public.
            %p Here are some questions to help you reflect on this solution and learn the most from it.
            %ul
              %li What compromises have been made?
              %li Are there new concepts here that I could read more about to develop my understanding?

  .comments-section
    .lo-container
      .pure-g
        .pure-u-1-2
          %h2 Community Comments
          .h2-subtitle See what others have said about this solution
          -@comments.each do |reaction|
            .comment.pure-g
              .pure-u-2-24
                %i.fa{class: reaction_icon(reaction)}
              .pure-u-22-24.content
                .when #{time_ago_in_words(reaction.created_at)} ago
                .who
                  %strong #{display_name reaction.user}
                  says
                .text= reaction.comment

-content_for :js do
  :coffeescript
    setupTabs = =>
      $('.tab').click ->
        $container = $(this).closest('.tabs-and-panes')

        for c in $container[0].className.split(" ")
          $container.removeClass(c) if c.startsWith("selected-")

        tabId = null
        for c in this.className.split(" ")
          tabId = c.replace("tab-", "") if c.startsWith("tab-")

        $container.addClass("selected-\#{tabId}") if tabId
    setupTabs()
